extends ../../base


block append head
  link(rel="stylesheet" href="/css/layout/adminLayouts.css")
  link(rel="stylesheet" href="/css/layout/user-view.css")
  link(rel="stylesheet" href="/css/pages/manageBookings.css")


block content
  main.main
    .user-view
      include ../../_sidenav

      .user-view__container
        .user-view__bookings-container.user-view__content
          h2.heading-secondary.ma-bt-md Manage Bookings

          // Search and Filter Section
          .booking-controls
            .booking-controls__main
              .search-box
                .form__group
                  label.form__label(for='searchBooking') Search by ID or Email
                  input#searchBooking.form__input(
                    type='text',
                    placeholder='Search by booking ID or user email...',
                    autocomplete='off'
                  )
              .tour-box
                .form__group
                  label.form__label(for='tourFilter') Tour
                  select#tourFilter.form__input
                    option(value='') All Tours
                    if tours && tours.length
                      each tour in tours
                        option(value=`${tour._id}`)= tour.name
              .filter-box
                .form__group
                  label.form__label(for='statusFilter') Status
                  select#statusFilter.form__input
                    option(value='') All Status
                    option(value='true') Paid
                    option(value='false') Unpaid


            .booking-controls__dates
              .form__group
                label.form__label(for='startDateFrom') Date Range
                .flex__container
                  .date-inputs
                    input#startDateFrom.form__input(
                      type='date',
                      name='startDateFrom'
                    )
                    span.date-separator to
                    input#startDateTo.form__input(
                      type='date',
                      name='startDateTo'
                    )
                  .booking-creation
                    button.btn.btn--small.btn--green#createBookingBtn Create Booking

          // Bookings Table
          .booking-table
            table.table
              thead
                tr
                  th Booking ID
                  th User
                  th Tour
                  th Start Date
                  th Total Price
                  th Status
                  th Actions
              tbody#bookingTableBody
                // Bookings will be populated here via JavaScript


          // Pagination
          .pagination
            button.btn.btn--small#prevPage Previous
            span#pageInfo Page 1 of 1
            button.btn.btn--small#nextPage Next

          // Create Booking Modal
          .modal#createBookingModal
            .modal-content
              span.close-modal &times;
              h3#modalTitle Create New Booking
              form#createBookingForm.form
                .form__group
                  label.form__label(for='bookingTour') Tour*
                  select#bookingTour.form__input(required)
                    option(value='') Select Tour
                    if tours && tours.length
                      each tour in tours
                        option(value=`${tour._id}`)= tour.name
                
                .form__group
                  label.form__label(for='bookingDate') Start Date*
                  select#bookingDate.form__input(required)
                    option(value='') Select Tour First
                
                .form__group
                  label.form__label(for='bookingUserId') User ID*
                  input#bookingUserId.form__input(
                    type='text',
                    required,
                    placeholder='User ID'
                  )
                
                .form__group
                  label.form__label(for='bookingParticipants') Number of Participants*
                  input#bookingParticipants.form__input(
                    type='number',
                    required,
                    min='1'
                  )
                
                .form__group
                  label.form__label(for='bookingPrice') Price*
                  input#bookingPrice.form__input(
                    type='number',
                    required,
                    step='0.01',
                    min='0'
                  )
                
                .form__group
                  label.form__label(for='bookingPaid') Payment Status
                  select#bookingPaid.form__input
                    option(value='true') Paid
                    option(value='false') Unpaid
                
                .form__group.right
                  button.btn.btn--small.btn--grey#cancelCreateBtn(type='button') Cancel
                  button.btn.btn--small.btn--green(type='submit') Create Booking


          // Edit Booking Modal
          .modal#bookingModal
            .modal-content
              span.close-modal &times;
              h3#modalTitle Edit Booking

              // Booking Info (Non-editable)
              .booking-info
                .info-group
                  label.info-label Booking ID
                  p#bookingId.info-value
                .info-group
                  label.info-label User
                  p#bookingUser.info-value
                .info-group
                  label.info-label Tour
                  p#bookingTour.info-value
                // Add payment info section here
                .info-group
                  label.info-label Payment Details
                  #paymentInfo.info-value
                    // Will be populated by JavaScript

              // Edit Form
              form#bookingForm.form
                .form__group
                  label.form__label(for='startDate') Tour Start Date
                  select#startDate.form__input(required)
                .form__group
                  label.form__label(for='numParticipants') Number of Participants
                  input#numParticipants.form__input(type='number', required, min='1')
                .form__group
                  label.form__label(for='price') Total Price
                  input#price.form__input(type='number', required, step='0.01')
                .form__group
                  label.form__label(for='paid') Payment Status
                  select#paid.form__input
                    option(value='true') Paid
                    option(value='false') Unpaid
                .form__group.right.action-btns
                    button.btn.btn--small.btn--green(type='submit') Save Changes
                    // Refund button will be inserted here dynamically
                    button.btn.btn--small.btn--grey#cancelBtn Cancel