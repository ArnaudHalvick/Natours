extends ../../base

block append head
  link(rel="stylesheet" href="/css/layout/adminLayouts.css")
  link(rel="stylesheet", href="/css/layout/user-view.css")
  link(rel="stylesheet" href="/css/pages/manageRefunds.css")

block content
  main.main
    .user-view
      include ../../_sidenav
      
      .user-view__content
        .user-view__container
          h2.heading-secondary.ma-bt-md Manage Refunds

          // Search and Filter Controls
          .refund-controls
            .refund-controls__main
              .search-box
                .form__group
                  label.form__label(for='search') Search
                  input#search.form__input(
                    type='text', 
                    placeholder='Search by booking ID or user...'
                  )

              .filter-box
                .form__group
                  label.form__label(for='status') Status
                  select#status.form__input(name='status')
                    option(value='' selected=!currentStatus) All
                    option(value='pending' selected=currentStatus==='pending') Pending
                    option(value='processed' selected=currentStatus==='processed') Processed
                    option(value='rejected' selected=currentStatus==='rejected') Rejected

                .form__group
                  label.form__label(for='sort') Sort by
                  select#sort.form__input(name='sort')
                    option(value='-requestedAt' selected=currentSort==='-requestedAt' || !currentSort) Latest First
                    option(value='requestedAt' selected=currentSort==='requestedAt') Oldest First
                    option(value='-amount' selected=currentSort==='-amount') Amount (High to Low)
                    option(value='amount' selected=currentSort==='amount') Amount (Low to High)

            .refund-controls__dates
              .form__group
                label.form__label(for='dateFrom') Date Range
                .date-inputs
                  input#dateFrom.form__input(
                    type='date', 
                    name='dateFrom',
                    value=currentDateFrom
                  )
                  span.date-separator to
                  input#dateTo.form__input(
                    type='date', 
                    name='dateTo',
                    value=currentDateTo
                  )

          // Refunds Table
          .refund-table
            table.table
              thead
                tr
                  th 
                    span Booking ID
                  th 
                    span User
                  th 
                    span Amount
                  th 
                    span Requested
                  th 
                    span Processed
                  th 
                    span Status
                  th Actions
              tbody#refundTableBody
                if refunds.length > 0
                  each refund in refunds
                    tr(class=refund.status === 'pending' ? 'refund--pending' : '')
                      td= refund.booking._id
                      td= refund.user ? refund.user.name : 'Unknown User'
                      td.amount $#{refund.amount.toFixed(2)}
                      td= refund.requestedAt.toLocaleDateString()
                      td= refund.processedAt ? refund.processedAt.toLocaleDateString() : '-'
                      td
                        span(class=`status-badge status-badge--${refund.status}`)
                          = refund.status.charAt(0).toUpperCase() + refund.status.slice(1)
                      td.action-buttons
                        if refund.status === 'pending'
                          button.btn.btn--small.btn--manage(
                            data-refund-id=refund._id,
                            data-booking-id=refund.booking._id,
                            data-user=refund.user ? refund.user.name : 'Unknown User',
                            data-amount=refund.amount,
                            data-requested=refund.requestedAt.toLocaleDateString()
                          ) Manage
                else
                  tr
                    td(colspan="7").empty-message No refund requests found.

          // Pagination
          if totalPages > 1
            .pagination
              if currentPage > 1
                button.btn.btn--small#prevPage(data-page=currentPage - 1) Previous
              span#pageInfo.pagination__numbers Page #{currentPage} of #{totalPages}
              if currentPage < totalPages
                button.btn.btn--small#nextPage(data-page=currentPage + 1) Next

          // Refund Modal
          .refund-modal.hidden
            .refund-modal__content
              h3.heading-tertiary Manage Refund
              .refund-details
                p
                  strong Booking ID: 
                  span#modalBookingId
                p
                  strong User: 
                  span#modalUser
                p
                  strong Amount: 
                  span#modalAmount
                p
                  strong Requested Date: 
                  span#modalRequestDate

              .refund-actions
                button.btn.btn--green.btn--small#processRefundBtn Process
                button.btn.btn--red.btn--small#rejectRefundBtn Reject
                button.btn.btn--small#closeModalBtn Cancel