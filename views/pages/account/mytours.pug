extends ../../base

block append head
  link(rel="stylesheet" href="/css/layout/user-view.css")
  link(rel="stylesheet" href="/css/pages/mytours.css")


block content
  main.main
    .user-view
      include ../../_sidenav

      .user-view__container
        .user-view__content
          h2.heading-secondary.ma-bt-md Your Bookings

          // Controls Section
          .booking-controls
            .booking-controls__main
              .tour-box
                .form__group
                  label.form__label(for='tourFilter') Filter by Tour
                  select#tourFilter.form__input
                    option(value='') All Tours
                    if bookings && bookings.length
                      - const uniqueTours = [...new Set(bookings.map(booking => booking.tour.name))]
                      each tourName in uniqueTours
                        option(value=tourName)= tourName

              .sort-box
                .form__group
                  label.form__label(for='sortBy') Sort By
                  select#sortBy.form__input
                    option(value='createdAt-desc') Purchase Date (Latest First)
                    option(value='createdAt-asc') Purchase Date (Oldest First)
                    option(value='price-desc') Price (High to Low)
                    option(value='price-asc') Price (Low to High)
                    option(value='startDate-desc') Start Date (Latest First)
                    option(value='startDate-asc') Start Date (Earliest First)

          // Bookings Table
          .booking-table
            table.table
              thead
                tr
                  th.th-tour Tour
                  th.th-purchase Purchase Date
                  th.th-start Start Date
                  th.th-price Price
                  th.th-participants Participants
                  th.th-status Status
                  th.th-actions Actions
              tbody#bookingTableBody
                if bookings.length > 0
                  each booking in bookings
                    tr(data-booking-id=booking._id)
                      td.td-tour
                        span.tour-name= booking.tour.name
                      td.td-purchase= new Date(booking.createdAt).toLocaleDateString("en-us", { year: 'numeric', month: 'long', day: 'numeric' })
                      td.td-start= new Date(booking.startDate).toLocaleDateString("en-us", { year: 'numeric', month: 'long', day: 'numeric' })
                      td.td-price $#{booking.price.toLocaleString()}
                      td.td-participants= booking.numParticipants
                      td.td-status
                        - const hasStarted = new Date(booking.startDate) < new Date()
                        - const refundStatus = refundsByBooking && refundsByBooking[booking._id.toString()]
                        if hasStarted
                          span.status-badge.status-badge--started Started
                        else if refundStatus
                          span.status-badge(class=`status-badge--${refundStatus.toLowerCase()}`)= refundStatus
                        else
                          span.status-badge.status-badge--upcoming Upcoming
                      td.td-actions
                        .table-actions
                          a.btn.btn--small.btn--green(href=`/tour/${booking.tour.slug}`) 
                            i.fas.fa-eye
                            | View Tour
                          if hasStarted
                            if reviewsByTour && reviewsByTour[booking.tour._id]
                              a.btn.btn--small.btn--orange(href=`/tour/${booking.tour.slug}/review/${reviewsByTour[booking.tour._id]._id}/edit`)
                                i.fas.fa-edit
                                | Edit Review
                            else
                              a.btn.btn--small.btn--blue(href=`/tour/${booking.tour.slug}/review`)
                                i.fas.fa-star
                                | Write Review
                          else
                            if !refundStatus
                              button.btn.btn--small.btn--purple.add-travelers-btn(data-booking-id=booking._id)
                                i.fas.fa-user-plus
                                | Add Travelers
                              button.btn.btn--small.btn--red.refund-btn(
                                type="button"
                                data-booking-id=booking._id
                              )
                                i.fas.fa-undo
                                | Request Refund
                else
                  tr.empty-row
                    td(colspan="7")
                      .empty-message
                        i.fas.fa-calendar-times
                        p No bookings found

          // Refund Modal
          .modal#refundModal
            .modal-content
              span.close-modal &times;
              h3#modalTitle Request Refund
              .refund-details
                p#refundTourName
                p#refundStartDate
                p#refundAmount
              .refund-warning
                p 
                  i.fas.fa-exclamation-triangle
                  | Please note that refund requests can only be made for upcoming tours.
              .action-btns
                button.btn.btn--red#confirmRefund Confirm Refund
                button.btn.btn--grey#cancelRefund Cancel